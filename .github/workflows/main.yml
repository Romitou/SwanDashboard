name: PHP CI
on: [push]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:

    - name: ‚¨áÔ∏è Checkout
      uses: actions/checkout@v2

    - name: üîß Setup PHP 8.0 with tools
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
        tools: composer
        coverage: xdebug

    - name: üì¶ Cache Composer packages
      uses: actions/cache@v2
      id: composer-cache
      env:
        cache-name: cache-composer-packages
      with:
        path: ./vendor/
        key: ${{ runner.os }}-build-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-composer-

    - name: üì¶ Cache Node modules
      uses: actions/cache@v2
      id: node-cache
      env:
        cache-name: cache-node-modules
      with:
        path: ./node_modules/
        key: ${{ runner.os }}-build-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-node-

    - name: üîí Create test environment file
      uses: SpicyPizza/create-envfile@v1
      with:
        envkey_MONGODB_URL: ${{ secrets.MONGODB_URL }}
        envkey_MONGODB_DB: ${{ secrets.MONGODB_DB }}
        envkey_DATABASE_URL: 'null'
        envkey_DISCORD_GUILD: 'null'
        envkey_DISCORD_SWAN_TOKEN: 'null'
        envkey_OAUTH_DISCORD_CLIENT_ID: 'null'
        envkey_OAUTH_DISCORD_CLIENT_SECRET: 'null'
        file_name: .env.test

    - name: ‚ûï Install Composer packages
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install

    - name: ‚ûï Install Node modules
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: yarn

    - name: üë∑ Run production build
      run: yarn build
      
    - name: üïë Wait last workflow to finish
      uses: tomchv/wait-my-workflow@v1.1.0
      id: wait-build
      with:
        token: ${{ secrets.GH_TOKEN }}
        checkName: build-and-test
        ref: $(git rev-parse HEAD~)
        intervalSeconds: 10
        timeoutSeconds: 100
        
    - name: üóÉÔ∏è Load Doctrine fixtures
      if: steps.wait-build.outputs.conclusion == 'success'
      run: php bin/console doctrine:mongodb:fixtures:load --env=test --no-interaction

    - name: ‚úÖ Run PHPUnit and publish code coverage
      if: steps.wait-build.outputs.conclusion == 'success'
      uses: paambaati/codeclimate-action@v2.7.5
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        coverageCommand: php bin/phpunit --coverage-clover clover.xml
